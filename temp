import {
    htmlPriceTable,
    priceTable,
    CF,
    presentValue,
    getInterest,
    setDownPayment,
  } from "./rational.js";
  
  /**
   * Executes the CDC calculation.
   *
   * @event onclick - when submit button is clicked.
   * @requires module:rational
   * @see https://api.jquery.com/click/
   * @see https://api.jquery.com/event.preventDefault/
   */
  $("#submitButton").on("click", async function (event) {
    var errorMessage = "";
    if ($("#parc").val() <= 2) {
      errorMessage += "<p>Número de parcelas deve ser maior do que 1.</p>";
    }
    if ($("#itax").val() <= 0 && $("#ipp").val() <= 0) {
      errorMessage +=
        "<p>Taxa de juros e valor final não podem ser ambos nulos.</p>";
    }
    if ($("#itax").val() <= 0 && $("#ipv").val() <= 0) {
      errorMessage +=
        "<p>Taxa de juros e valor financiado não podem ser ambos nulos.</p>";
    }
    if ($("#ipv").val() <= 0 && $("#ipp").val() <= 0) {
      errorMessage +=
        "<p>Valor financiado e valor final não podem ser ambos nulos.</p>";
    }
    if ($("#inb").val() < 0 || +$("#inb").val() > $("#parc").val()) {
      errorMessage +=
        "<p>Meses a voltar deve ser positivo e menor ou igual ao número de parcelas.</p>";
    }
    event.preventDefault();
    if (errorMessage != "") {
      $("#errorMessage").html(errorMessage);
      $("#errorMessage").show();
      $("#successMessage").hide();
      return;
    } else {
      $("#successMessage").show();
      $("#errorMessage").hide();
    }
  
    //  Get data from fields

    let np = Number(parc.value); // representa o número de parcelas 
    let t = Number(itax.value); // representa a taxa de juros
    let pp = Number(ipp.value); // representa o valor final
    let pv = Number(ipv.value); // representa o valor financiado a vista
    let pb = Number(ipb.value); // representa o valor a voltar
    let nb = Number(inb.value); // representa o meses a voltar
    let dp = idp.checked; // representa a informação de se houve de parcela de entrada ou não
    let prt = iprt.checked; // representa a informação de se deve haver print ou não
    setDownPayment(dp);

    /* $numeroParcelas = (int) $_POST["np"];
    $juros = (float) $_POST["tax"];
    $valorFinanciado = (float) $_POST["pv"];
    $valorFinal = (float) $_POST["pp"];
    $mesesAVoltar = (int) $_POST["pb"];
    $temEntrada = (bool) $_POST["dp"]; */

    let input = {
      "np" : np, // representa o número de parcelas 
      "t" : t, // representa a taxa de juros
      "pp" : pp, // representa o valor final
      "pv" : pv, // representa o valor financiado a vista
      "pb" : pb, // representa o valor a voltar
      "nb" : nb, // representa o meses a voltar
      "dp" : dp, // representa a informação de se houve de parcela de entrada ou não
      "prt" : prt// representa a informação de se deve haver print ou não
   }

   /* fetch("api/index.php", {
      "method": "POST",
      "headers": {
          "Content-Type": "application/json; charset=utf-8"
      },
      "body": JSON.stringify(input)

    }).then(function(response) {
      return response.json();
    }).then(function(data){
       console.log(data);
    })  */

     let result = await fetch("api/index.php", {
      "method": "POST",
      "headers": {
          "Content-Type": "application/json; charset=utf-8"
      },
      "body": JSON.stringify(input)

    }).then(function(response) {
      return response.json();
    })

    console.log("Result = ");
    console.log(result); 
  
    if (pv == 0) {
      pv = presentValue(pp, np, t)[1];
    }
  
    let pmt = pp / np;
    let cf = 0;
    let i = 0;
    let ti = 0;
    try {
      if (t == 0) {
        if (pmt >= pv) {
          throw new Error(
            `Prestação (\$${pmt.toFixed(2)}) é maior do que o empréstimo`
          );
        }
        [ti, i] = getInterest(pp, pv, np);
        t = 0.01 * ti;
      }

      cf = CF(t, np); 
      pmt = pv * cf;

      // there is no sense in a montly payment greater than the loan...
      if (pmt >= pv) {
        throw new Error(
          `Prestação (\$${pmt.toFixed(2)}) é maior do que o empréstimo`
        );
      }
      if (dp) {
        pmt /= 1 + t; // diminui a prestação
        np -= 1; // uma prestação a menos
        pv -= pmt; // preço à vista menos a entrada
        cf = pmt / pv; // recalculate cf
      }
    } catch (e) {
      $("#errorMessage").html(`<h4>${e.message}</h4>`);
      $("#errorMessage").show();
      $("#successMessage").hide();
      return;
    }


    // AQUI QUE VAI QUE O SERVIDOR PHP VAI GERAR A TABELA PRICE
    let user = {
      "np": np,
      "pv": pv,
      "t": t,
      "pmt": pmt, 
      "dp" : dp
   }
  
    /*let params = {
      "method": "POST",
      "headers": {
          "Content-Type": "application/json; charset=utf-8"
      },
      "body": JSON.stringify(user)
    } */

    

    /*fetch("script.php", {
      "method": "POST",
      "headers": {
          "Content-Type": "application/json; charset=utf-8"
      },
      "body": JSON.stringify(user)

    }).then(function(response) {
      return response.json();
    }).then(function(data){
      // console.log(data);
    }) */


    /*

    let resultTable = await fetch("api/index.php", {
      "method": "POST",
      "headers": {
          "Content-Type": "application/json; charset=utf-8"
      },
      "body": JSON.stringify(user)

    }).then(function(response) {
      return response.json();
    })

    let ptb = []; 
    for(let i in resultTable) { 
      ptb.push(resultTable[i]); 
    }; 

    //let ptb = priceTable(np, pv, t, pmt);
    console.log(ptb); */

    if (pb == 0 && nb > 0) {
      pb = pmt * nb;
    }
  
    $("#greenBox").show();
    $("#blueBox").show();
    $("#redBox").show();
    $("#cdcfieldset").hide();
  
    $("#greenBox").html(
      `<h4>Parcelamento: ${dp ? "1+" : ""}${np} meses</h4>
      <h4>Taxa: ${(100 * t).toFixed(2)}% ao mês = ${(
        ((1 + t) ** 12 - 1) *
        100.0
      ).toFixed(2)}% ao ano</h4>
      <h4>Valor Financiado: \$${pv.toFixed(2)}</h4>
      <h4>Valor Final: \$${pp.toFixed(2)}</h4>
      <h4>Valor a Voltar: \$${pb.toFixed(2)}</h4>
      <h4>Meses a Voltar: ${nb}</h4>
      <h4>Entrada: ${dp}</h4>`
    );
  
    $("#blueBox").html(
      `<h4>Coeficiente de Financiamento: ${cf.toFixed(6)}</h4>
      <h4>Prestação: ${cf.toFixed(6)} * \$${pv.toFixed(2)} = \$${pmt.toFixed(
        2
      )} ao mês</h4>
      <h4>Valor Pago com Juros: \$${ptb.slice(-1)[0][1].toFixed(2)}</h4>
      <h4>Taxa Real (${i} iterações): ${ti.toFixed(4)}% ao mês</h4>
      <h4>Valor Corrigido: \$${
        nb > 0 ? presentValue(pb, nb, t, false)[1].toFixed(2) : 0
      }</h4>`
    );
  
    $("#redBox").html(htmlPriceTable(ptb));
  
    if (prt) {
      window.print();
    }
  });
  
  /**
   * Go back to the form.
   *
   * @event onclick - when the green box rectangle is clicked.
   * @see https://api.jquery.com/click/
   * @see https://api.jquery.com/event.preventDefault/
   */
  $("#greenBox").on("click", function (event) {
    $("#greenBox").hide();
    $("#blueBox").hide();
    $("#redBox").hide();
    $("#cdcfieldset").show();
  });
  